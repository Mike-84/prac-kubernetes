apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  #labels: # labels del deployment
  #  app: application
spec:
  selector:
    matchLabels: # selector de PODS
      app: application
  replicas: 1
  template: # Pod Template
    metadata:
      labels:
        app: application
    spec:
      containers:
      - name: app-prueba
        image: mike84/app-notas:v1
        env:
          - name: MYSQL_HOST
            value: dbserver # apunta al servicio creado para la bd
          - name: MYSQL_USER
            valueFrom:
              configMapKeyRef:
                name: config-names
                key: username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: password
          - name: MYSQL_DB
            valueFrom:
              configMapKeyRef:
                name: config-names
                key: dbname
        ports: # puertos que publicas
          - containerPort: 3000
            #name: mipuerto
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: app-service-np
# spec:
#   type: NodePort
#   ports:
#   - port: 3000
#   selector:
#     app: application
---
apiVersion: v1
kind: Service
metadata:
  name: app-service-cl
spec:
  type: ClusterIP
  ports:
  - port: 3000
  selector:
    app: application
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: app-service-lb
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#     targetPort: 3000
#   selector:
#     app: application
---
# Ingress example
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: app-service-cl
          servicePort: 3000
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-ingress
#   annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: app-service-cl
#             port:
#               number: 3000
